const quizzes = [
  {
    id: 1,
    title: "JavaScript Fundamentals",
    description: "Test your knowledge of JavaScript basics, variables, and functions",
    category: "Programming",
    difficulty: "Easy",
    questions: [
      { id: 1, question: "What is the result of 2 + '2'?", options: ["4", "22", "NaN", "Error"], correctAnswer: "22" },
      { id: 2, question: "Which keyword declares a variable?", options: ["var", "let", "const", "all"], correctAnswer: "all" },
      { id: 3, question: "What is a function?", options: ["A loop", "A block of code", "A variable", "An array"], correctAnswer: "A block of code" },
      { id: 4, question: "Which operator checks equality?", options: ["=", "==", "===", "!="], correctAnswer: "===" },
      { id: 5, question: "What does console.log do?", options: ["Logs to console", "Creates a loop", "Defines a function", "Sets a variable"], correctAnswer: "Logs to console" },
      { id: 6, question: "What is undefined?", options: ["A value", "A type", "A variable", "A function"], correctAnswer: "A value" },
    ],
    time: 15,
  },
  {
    id: 2,
    title: "React Hooks Mastery",
    description: "Advanced React Hooks concepts and best practices",
    category: "React",
    difficulty: "Hard",
    questions: [
      { id: 1, question: "Which hook should you use to perform side effects?", options: ["useState", "useEffect", "useContext", "useReducer"], correctAnswer: "useEffect" },
      { id: 2, question: "What is the dependency array in useEffect used for?", options: ["Storing data", "Controlling when effect runs", "Managing state", "Creating refs"], correctAnswer: "Controlling when effect runs" },
      { id: 3, question: "Which hook manages state?", options: ["useEffect", "useState", "useContext", "useReducer"], correctAnswer: "useState" },
      { id: 4, question: "What does useContext provide?", options: ["State management", "Context access", "Side effects", "Refs"], correctAnswer: "Context access" },
      { id: 5, question: "Which hook handles complex state logic?", options: ["useEffect", "useState", "useContext", "useReducer"], correctAnswer: "useReducer" },
      { id: 6, question: "What is useMemo used for?", options: ["Memoization", "State", "Effects", "Context"], correctAnswer: "Memoization" },
    ],
    time: 15,
  },
  {
    id: 3,
    title: "CSS Grid & Flexbox",
    description: "Master modern CSS layout techniques",
    category: "CSS",
    difficulty: "Medium",
    questions: [
      { id: 1, question: "What is the primary use of CSS Grid?", options: ["Styling text", "Creating layouts", "Animating elements", "Defining colors"], correctAnswer: "Creating layouts" },
      { id: 2, question: "Which property defines rows in CSS Grid?", options: ["grid-template-columns", "grid-template-rows", "grid-gap", "grid-area"], correctAnswer: "grid-template-rows" },
      { id: 3, question: "What does flex-direction do?", options: ["Sets item order", "Defines layout direction", "Controls spacing", "Aligns items"], correctAnswer: "Defines layout direction" },
      { id: 4, question: "Which value makes a flex item grow?", options: ["flex-shrink", "flex-grow", "flex-basis", "flex-wrap"], correctAnswer: "flex-grow" },
      { id: 5, question: "What is the default value of justify-content?", options: ["flex-start", "center", "space-between", "flex-end"], correctAnswer: "flex-start" },
      { id: 6, question: "Which property sets gap between grid items?", options: ["grid-gap", "gap", "margin", "padding"], correctAnswer: "gap" },
    ],
    time: 10,
  },
  {
    id: 4,
    title: "TypeScript Basics",
    description: "Learn the fundamentals of TypeScript typing system",
    category: "Programming",
    difficulty: "Medium",
    questions: [
      { id: 1, question: "What is TypeScript?", options: ["A CSS framework", "A JavaScript superset", "A database", "A server"], correctAnswer: "A JavaScript superset" },
      { id: 2, question: "Which keyword defines a type?", options: ["type", "interface", "class", "both type and interface"], correctAnswer: "both type and interface" },
      { id: 3, question: "What does 'any' type allow?", options: ["Strict typing", "No type checking", "Only numbers", "Only strings"], correctAnswer: "No type checking" },
      { id: 4, question: "Which operator checks type compatibility?", options: ["typeof", "instanceof", "is", "as"], correctAnswer: "instanceof" },
      { id: 5, question: "What is an interface used for?", options: ["Defining functions", "Defining object shapes", "Creating loops", "Setting variables"], correctAnswer: "Defining object shapes" },
      { id: 6, question: "What does 'never' type represent?", options: ["Always true", "No return", "Always false", "Any type"], correctAnswer: "No return" },
    ],
    time: 15,
  },
  {
    id: 5,
    title: "Node.js Core Concepts",
    description: "Understand the core modules and architecture of Node.js",
    category: "Backend",
    difficulty: "Hard",
    questions: [
      { id: 1, question: "What is Node.js built on?", options: ["Python", "V8", "Java", "Ruby"], correctAnswer: "V8" },
      { id: 2, question: "Which module is used for file system?", options: ["fs", "http", "path", "os"], correctAnswer: "fs" },
      { id: 3, question: "What is the default event loop model?", options: ["Single-threaded", "Multi-threaded", "Asynchronous", "Synchronous"], correctAnswer: "Single-threaded" },
      { id: 4, question: "Which method starts a server?", options: ["listen", "start", "run", "serve"], correctAnswer: "listen" },
      { id: 5, question: "What does require do?", options: ["Imports modules", "Exports data", "Creates servers", "Defines types"], correctAnswer: "Imports modules" },
      { id: 6, question: "What is npm used for?", options: ["Package management", "Code editing", "Database queries", "UI design"], correctAnswer: "Package management" },
    ],
    time: 15,
  },
  {
    id: 6,
    title: "HTML5 Features",
    description: "Explore the modern features of HTML5",
    category: "HTML",
    difficulty: "Easy",
    questions: [
      { id: 1, question: "What is the purpose of <canvas>?", options: ["Styling", "Drawing graphics", "Form validation", "Navigation"], correctAnswer: "Drawing graphics" },
      { id: 2, question: "Which tag is new in HTML5?", options: ["<div>", "<section>", "<span>", "<table>"], correctAnswer: "<section>" },
      { id: 3, question: "What does <video> support?", options: ["Images", "Audio", "Video playback", "Text"], correctAnswer: "Video playback" },
      { id: 4, question: "Which attribute ensures form data validity?", options: ["required", "type", "value", "name"], correctAnswer: "required" },
      { id: 5, question: "What is the use of <audio>?", options: ["Video", "Sound playback", "Images", "Text"], correctAnswer: "Sound playback" },
      { id: 6, question: "Which API handles geolocation?", options: ["Canvas API", "Geolocation API", "Web Storage API", "Web Audio API"], correctAnswer: "Geolocation API" },
    ],
    time: 15,
  },
  {
    id: 7,
    title: "Python Data Structures",
    description: "Master lists, dictionaries, and tuples in Python",
    category: "Python",
    difficulty: "Medium",
    questions: [
      { id: 1, question: "What is a list in Python?", options: ["Immutable", "Ordered collection", "Key-value pair", "Function"], correctAnswer: "Ordered collection" },
      { id: 2, question: "Which is mutable?", options: ["Tuple", "List", "String", "Set"], correctAnswer: "List" },
      { id: 3, question: "What does a dictionary store?", options: ["Keys and values", "Only values", "Only keys", "Lists"], correctAnswer: "Keys and values" },
      { id: 4, question: "Which method adds to a list?", options: ["append", "add", "insert", "extend"], correctAnswer: "append" },
      { id: 5, question: "What is a tuple?", options: ["Mutable", "Immutable", "Function", "Class"], correctAnswer: "Immutable" },
      { id: 6, question: "How to access a dictionary value?", options: ["dot notation", "index", "key", "method"], correctAnswer: "key" },
    ],
    time: 15,
  },
  {
    id: 8,
    title: "Git & Version Control",
    description: "Essential Git commands and workflows",
    category: "Tools",
    difficulty: "Easy",
    questions: [
      { id: 1, question: "What does 'git init' do?", options: ["Clones repo", "Initializes repo", "Commits changes", "Pulls updates"], correctAnswer: "Initializes repo" },
      { id: 2, question: "Which command stages changes?", options: ["git add", "git commit", "git push", "git pull"], correctAnswer: "git add" },
      { id: 3, question: "What does 'git commit' do?", options: ["Saves changes", "Stages files", "Pushes to remote", "Clones repo"], correctAnswer: "Saves changes" },
      { id: 4, question: "Which command shows commit history?", options: ["git log", "git status", "git diff", "git branch"], correctAnswer: "git log" },
      { id: 5, question: "What does 'git push' do?", options: ["Pulls changes", "Pushes to remote", "Stages files", "Commits"], correctAnswer: "Pushes to remote" },
      { id: 6, question: "Which command creates a branch?", options: ["git branch", "git checkout", "git merge", "git clone"], correctAnswer: "git branch" },
    ],
    time: 15,
  },
];

const getQuizByTitle = (title) => {
  return quizzes.find((q) => q.title === decodeURIComponent(title)) || null;
};

module.exports = { getQuizByTitle };